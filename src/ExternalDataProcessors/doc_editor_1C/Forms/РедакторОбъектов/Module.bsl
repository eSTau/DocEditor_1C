
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ЗаполнитьТипыДанных(СтруктураМетаданных) Экспорт
	
	ДобавитьПростыеТипы();	
	
	Для Каждого ЭлементОбъектаДанных Из СтруктураМетаданных.ПолучитьЭлементы() Цикл
		
		Если (ЭлементОбъектаДанных.Класс = "Буфер" Или ЭлементОбъектаДанных.Класс = "Конфигурация"
			Или ЭлементОбъектаДанных.Класс = "Общие" Или ЭлементОбъектаДанных.Класс = "Константа"
			Или ЭлементОбъектаДанных.Класс = "Отчет" Или ЭлементОбъектаДанных.Класс = "Обработка"
			Или ЭлементОбъектаДанных.Класс = "ЖурналДокументов"
			Или ЭлементОбъектаДанных.Класс = "РегистрСведений" 
			Или ЭлементОбъектаДанных.Класс = "РегистрНакопления"
			Или ЭлементОбъектаДанных.Класс = "РегистрБухгалтерии" 
			Или ЭлементОбъектаДанных.Класс = "РегистрРасчета") Тогда
				
				Продолжить;
				
		КонецЕсли;
		
		ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(ТипМетаданных, ЭлементОбъектаДанных);
		Для Каждого ПрикладнойОбъект Из ЭлементОбъектаДанных.ПолучитьЭлементы() Цикл
		
			Если (ПрикладнойОбъект.Класс = "НумераторДокументов" 
				Или ПрикладнойОбъект.Класс = "Последовательности") Тогда
				Продолжить;
			КонецЕсли;
		
			ПодчиненныйОбъект = ТипМетаданных.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(ПодчиненныйОбъект, ПрикладнойОбъект);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = "Редактор объекта:" + Параметры.ПолноеИмяВладельца;	
	ИдентификаторВладельца = Параметры.ИдентификаторВладельца;
	ПолноеИмяВладельца = Параметры.ПолноеИмяВладельца;
	Класс = Параметры.Класс;
	УстановитьТип = Параметры.УстановитьТип;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьРаботуСТипами();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипыВыборПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Типы.ТекущиеДанные;
	Если ТекущиеДанные.Выбор = Истина Тогда
		ДобавитьВыбранныйТип(ТекущиеДанные);
	Иначе
		УдалитьТипИзВыбранных(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Типы

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)

	ПолноеИмя = ПолноеИмяВладельца + "." + Имя;

	Длина = СтрДлина(Имя);
	Синоним = ВРег(Лев(Имя, 1));
	Для НомерСимвола = 2 По Длина Цикл
		СимволСтроки = Сред(Имя, НомерСимвола, 1);
		Если СимволСтроки = ВРег(СимволСтроки) Тогда
			Синоним = Синоним + " " + НРег(СимволСтроки);
		Иначе
			Синоним = Синоним + СимволСтроки;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСохранить(Команда)
	
	ДанныеОбъекта = Новый Структура();
	ДанныеОбъекта.Вставить("ИдентификаторВладельца", ИдентификаторВладельца);
	ДанныеОбъекта.Вставить("Класс", Класс);
	ДанныеОбъекта.Вставить("Имя", Имя);
	ДанныеОбъекта.Вставить("Синоним", Синоним);
	ДанныеОбъекта.Вставить("ПолноеИмя", ПолноеИмяВладельца + "." + Имя);
	ДанныеОбъекта.Вставить("Типы", ВыбранныеТипы);
	
	Оповестить("ОкончаниеРедактированиОбъекта", ДанныеОбъекта);
	
	Закрыть();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьРаботуСТипами()
	
	Если УстановитьТип Тогда
		Оповестить("ОткрытиеФормыРедактораОбъектов", ЭтаФорма);
	Иначе
		Элементы.ГруппаПравая.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПростыеТипы()
	
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
	ТипМетаданных.Имя = "Число";
	ТипМетаданных.ПолноеИмя = "Число";
	ТипМетаданных.Синоним = "Число";
	ТипМетаданных.ИндексКартинки = 60;
	
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
	ТипМетаданных.Имя = "Строка";
	ТипМетаданных.ПолноеИмя = "Строка";
	ТипМетаданных.Синоним = "Строка";
	ТипМетаданных.Выбор = Истина;
	ТипМетаданных.ИндексКартинки = 61;
	
	ДобавитьВыбранныйТип(ТипМетаданных);
		
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
	ТипМетаданных.Имя = "Дата";
	ТипМетаданных.ПолноеИмя = "Дата";
	ТипМетаданных.Синоним = "Дата";
	ТипМетаданных.ИндексКартинки = 62;
	
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить(); 
	ТипМетаданных.Имя = "Булево";
	ТипМетаданных.ПолноеИмя = "Булево";
	ТипМетаданных.Синоним = "Булево";
	ТипМетаданных.ИндексКартинки = 63;
	
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
	ТипМетаданных.Имя = "ХранилищеЗначения";
	ТипМетаданных.ПолноеИмя = "ХранилищеЗначения";
	ТипМетаданных.Синоним = "Хранилище значения";
	ТипМетаданных.ИндексКартинки = 64;
	
	ТипМетаданных = ТипыМетаданных.ПолучитьЭлементы().Добавить();
	ТипМетаданных.Имя = "УникальныйИдентификатор";
	ТипМетаданных.ПолноеИмя = "УникальныйИдентификатор";
	ТипМетаданных.Синоним = "Уникальный идентификатор";
	ТипМетаданных.ИндексКартинки = 65;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбранныйТип(ОбъектМетаданных)
	
	Если (ПустаяСтрока(ОбъектМетаданных.ПолноеИмя)) Тогда
		ИмяТипа = ОбъектМетаданных.Класс + "Ссылки";
	ИначеЕсли ОбъектМетаданных.Класс = "Справочник" Или ОбъектМетаданных.Класс = "Документ"
		Или ОбъектМетаданных.Класс = "Перечисление" Или ОбъектМетаданных.Класс = "ПланВидовХарактеристик"
		Или ОбъектМетаданных.Класс = "ПланСчетов" Или  ОбъектМетаданных.Класс = "ПланВидовРасчета"
		Или ОбъектМетаданных.Класс = "БизнесПроцесс" Или  ОбъектМетаданных.Класс = "Задача" Тогда
			
		ИмяТипа = ОбъектМетаданных.Класс + "Ссылка." + ОбъектМетаданных.Имя;
		
	Иначе
		ИмяТипа = ОбъектМетаданных.ПолноеИмя;
	КонецЕсли;
	
	ВыбранныеТипы.Добавить(ИмяТипа);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТипИзВыбранных(ОбъектМетаданных)
	
	Если (ПустаяСтрока(ОбъектМетаданных.ПолноеИмя)) Тогда
		ИмяТипа = ОбъектМетаданных.Класс + "Ссылка";
		Иначе
			ИмяТипа = ОбъектМетаданных.ПолноеИмя;
		КонецЕсли;
		
		ЭлементСписка = ВыбранныеТипы.НайтиПоЗначению(ИмяТипа);
		Если Не ЭлементСписка = Неопределено Тогда
			ВыбранныеТипы.Удалить(ЭлементСписка);
		КонецЕсли;
			
	КонецПроцедуры

#КонецОбласти
